{"version":3,"file":"component---src-pages-404-js.js","mappings":"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","sources":["webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-default/./src/components/footer.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/menu.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js","webpack://gatsby-starter-default/./src/components/layout.css"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\n\nconst Footer = () => {\n  return(\n    <>\n \n <footer class=\"footer footer-center  bg-slate-900 text-slate-100 mt-20\">\n  <div>\n  <div className=\"avatar pt-10\">\n          <div className=\"w-16 rounded-full\">\n            <Link key=\"377\" to=\"/\">\n              <StaticImage\n                className=\"w-16 rounded-full\"\n                alt=\"\"\n                src={\"../images/iam.webp\"}\n                formats={[\"auto\", \"webp\", \"avif\"]}\n              />\n            </Link>\n          </div>\n        </div> \n        <div className=\"mb-5\">\n        <span>Автор блога <br/>Ролдугин Андрей</span>\n        </div>\n        <span>Copyright © 2022 - Все права защищены. <br/>Копирование разрешается исключительно с использованием обратной ссылки</span>\n    <div className=\"mt-5\">\n                    <StaticImage\n                        src='../images/social/telegram.png'\n                        formats={[\"auto\"]}\n                        alt='@imarketer'\n                        className=\"w-7 h-7 mr-2\"\n                    />\n                    <StaticImage\n                        src='../images/social/facebook.png'\n                        formats={[\"auto\"]}\n                        alt='@imarketer'\n                        className=\"w-7 h-7 mr-2\"\n                    />\n                    <StaticImage\n                        src='../images/social/instagram.png'\n                        formats={[\"auto\"]}\n                        alt='@imarketer'\n                        className=\"w-7 h-7 mr-2\"\n                    />\n                    <StaticImage\n                        src='../images/social/linkedin.png'\n                        formats={[\"auto\"]}\n                        alt='@imarketer'\n                        className=\"w-7 h-7 mr-2\"\n                    />\n                    </div>\n  </div> \n  \n  <div>\n\n  </div>\n</footer>\n\n    \n      \n    </>\n  )\n}\n\nexport default Footer\n","import { Link } from \"gatsby\"\nimport * as React from \"react\"\nimport Menu from \"./menu\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\n\nconst Header = () => {\n  return (\n  <div className=\"dark mb-10 border-b\">\n<div className=\"navbar\">\n  <div className=\"navbar-start\">\n  <div className=\"avatar lg:hidden\">\n      <StaticImage\n        className=\"w-16 h-16 rounded-full\"\n        alt=\"\"\n        src={\"../images/iam.webp\"}\n        formats={[\"auto\", \"webp\", \"avif\"]}\n      />\n    </div>\n  \n    <div className=\"navbar  relative hidden lg:flex\">\n    <div className=\"logo\">\n      <div className=\"w-full rounded-full\"> \n       <div className=\"avatar\">\n          <div className=\"w-16 rounded-full\">\n            <Link key=\"377\" to=\"/\">\n              <StaticImage\n                className=\"w-16 rounded-full\"\n                alt=\"\"\n                src={\"../images/iam.webp\"}\n                formats={[\"auto\", \"webp\", \"avif\"]}\n              />\n            </Link>\n          </div>\n        </div>\n       \n      </div>\n    </div>\n\n  </div>\n  </div>\n\n  <div className=\"navbar-end\">\n  <Menu/>\n    \n  </div>\n</div>\n  </div>    \n   )\n}\n  \n\n\n\n\nexport default Header\n\n\n","import * as React from \"react\"\nimport \"./layout.css\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\n\n\nconst Layout = ({ children }) => {\n\nreturn ( \n  <>\n  <div className=\"page\">\n  <div className=\"px-4\">\n  <Header/>\n   <div className=\"flex flex-row\">\n   <div className=\"static\">\n      <div class=\"fixed ml-10 top-32\">\n     <div className=\"mb-10\">\n        <StaticImage\n          src='../images/social/minimal/home.png'\n          formats={[\"auto\"]}\n          alt='@imarketer'\n          className=\"w-5 h-5\"\n        />\n     </div>\n     <div className=\"mb-10\">\n     <StaticImage\n          src='../images/social/minimal/notification.png'\n          formats={[\"auto\"]}\n          alt='@imarketer'\n          className=\"w-5 h-5\"\n        />\n     </div>\n     \n     <div className=\"mb-5\">\n       <Link key=\"3\" to=\"https://t.me/iam_marketer\" target=\"_blank\">\n     <StaticImage\n          src='../images/social/minimal/telegram.png'\n          formats={[\"auto\"]}\n          alt='@imarketer'\n          className=\"w-5 h-5 online placeholder\"\n        />\n       </Link>\n     </div>\n     \n\n      </div> \n      \n      </div>\n    <div className=\"basis-full pt-0\">\n    { children }\n    </div>\n  </div>\n  </div>\n</div>\n <Footer/>\n</>\n  )\n}\nexport default Layout\n\n","import * as React from \"react\"\nimport { StaticQuery } from \"gatsby\"\nimport { Link, graphql } from \"gatsby\"\n\nconst Menu = () => (\n\n    <StaticQuery \n    query = {graphql`\n     query {\n        wpMenu(locations: { eq: GATSBY_HEADER_MENU }) {\n            menuItems {\n              nodes {\n                id\n                label\n                title\n                path\n                parentId\n              }\n            }\n          }\n     }\n    `}\n    render = {data => (\n        <ul className=\"menu menu-horizontal p-0 hidden lg:flex font-bold\">\n\n        {data.wpMenu.menuItems.nodes.map((item) => {\n            const { label, path, id } = item\n\n            return (\n                <li><Link key={id} to={path}>{label}</Link></li>\n            )\n        })}\n\n</ul>\n    )}\n    />\n\n\n)\n    \n\n\n\nexport default Menu\n\n\n\n\n\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s / ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `ru`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <Seo title=\"404: Not found\" />\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n",""],"names":["DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","warn","message","console","sortNumeric","a","b","getSrcSet","images","map","image","src","width","join","formatFromFilename","filename","dot","lastIndexOf","ext","slice","length","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","u","format","toLowerCase","camelCase","Math","round","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","pluginName","reporter","backgroundColor","placeholderURL","Error","Set","size","has","add","imageSizes","imgDimensions","erroneousUserDimensions","Object","entries","filter","_","dim","outputPixelDensities","densities","dedupeAndSortDensities","calculated","getDimensionsAndAspectRatio","originalWidth","fixedDimension","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","getSizes","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","push","type","imageProps","placeholder","values","Array","from","concat","sort","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","max","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","gatsbyImage","isGatsbyImageParent","childImageSharp","_node$childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","c","props","_breakpoints","withArtDirection","defaultImage","artDirected","output","media","process","env","NODE_ENV","source","Image","loading","alt","shouldLoad","React","decoding","undefined","Picture","i","s","fallbackImage","key","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","_Picture$propTypes","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","children","Fragment","removeNewLines","str","replace","GatsbyImage","as","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","wClass","wrapperProps","cleanedImages","createElement","isLoaded","top","left","bottom","right","opacity","transition","getPlaceholderProps","isLoading","transform","willChange","getMainProps","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","toUpperCase","input","isArray","TypeError","assign","pascalCase","postProcess","x","charAt","trim","hasUpperCase","p1","m","module","exports","default","Link","Footer","Menu","Header","Layout","StaticQuery","data","wpMenu","menuItems","nodes","item","label","path","id","Helmet","Seo","description","lang","meta","title","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps","object","NotFoundPage"],"sourceRoot":""}