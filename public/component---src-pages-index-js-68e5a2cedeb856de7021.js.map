{"version":3,"file":"component---src-pages-index-js-68e5a2cedeb856de7021.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/all-posts.js","webpack://gatsby-starter-default/./src/pages/index.js","webpack://gatsby-starter-default/./src/pages/popular-post.js","webpack://gatsby-starter-default/./src/pages/small-card-posts.js","webpack://gatsby-starter-default/./src/pages/tags.js"],"sourcesContent":["import * as React from \"react\"\nimport { StaticQuery } from \"gatsby\"\nimport { Link, graphql } from \"gatsby\"\nimport {GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport Img from \"gatsby-image\" \n\n\nconst AllPosts = () => (\n\n    <StaticQuery \n    query = {graphql`\n     query ($filter: WpPostFilterInput = {categories: {nodes: {elemMatch: {slug: {eq: \"research\"}}}}}){\n        allWpPost (filter: $filter, limit: 4){\n            nodes {\n              date(formatString: \"LL\", locale: \"ru\")\n              id\n              content\n              excerpt\n              slug\n              title\n              author {\n                node {\n                  name\n                  description\n                }\n              }\n              categories {\n                nodes {\n                  name\n                  slug\n                  id\n                  icat {\n                    caticon {\n                      localFile {\n                        childImageSharp {\n                          fluid {\n                            base64\n                            aspectRatio\n                            src\n                            srcSet\n                            sizes\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              featuredImage {\n                node {\n                  localFile {\n                    childImageSharp {\n                      gatsbyImageData( formats: WEBP, placeholder: BLURRED)\n                    }\n                  }\n                }\n              }\n            }\n          }\n     }\n    `}\n    render = {data => (\n        <>\n        {data.allWpPost.nodes.map((post, node, nodes) => {\n          const {slug, id, title, categories, featuredImage, date, content } = post \n          let img = getImage(featuredImage.node.localFile.childImageSharp.gatsbyImageData)\n          const categ = categories.nodes\n          const aut = categ[0].icat.caticon.localFile.childImageSharp.fluid\n          var x = content\n          const time = 1500\n          \n          return (\n            <div key={id} className=\"flex justify-center\">\n              <div className=\"block text-left mt-10 pr-10\">\n              <Link key={id} to={`/${categ[0].slug}/`} >\n              <div className=\"flex\">\n              <Img \n                   fluid={aut} \n                   alt=\"A corgi smiling happily\"\n                   className=\"h-10 w-10 object-cover rounded-full mr-3\"\n                   />\n                    <div>\n                        <h6 className=\"font-bold text-indigo-700 hover:text-pink-700\">{categ[0].name}</h6>\n                        <small className=\"text-sm\">{date} - {Math.round(x.length/time)} минут</small>\n                    </div>\n                </div>\n                </Link>\n                <Link key={id} to={`/${categ[0].slug}/${slug}`} >\n                <div className=\"pt-4 mb-5\">\n                  <h2 className=\"text-xl font-bold mb-2\">{title}</h2>\n                 \n                  <GatsbyImage className=\"rounded\" image={img} alt={title} />\n                </div>\n                <button className=\"text-blue-600\">Читать статью →</button>\n                </Link>\n              </div>\n             \n            </div>\n          )\n        })}  \n\n        </>\n    )}\n    />\n\n\n)\n    \n\n\n\nexport default AllPosts\n\n\n\n\n\n","import * as React from \"react\"\nimport '../../src/styles/global.css'\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PopularPost from \"./popular-post\"\nimport AllPosts from \"./all-posts\"\nimport SmallPost from \"./small-card-posts\"\nimport TagsIndex from \"./tags\"\n\n\nconst IndexPage = ({ data }) => {\n\n  \n  return (\n    <Layout>\n      <Seo title=\"Я-Маркетолог\"/>\n      <div className=\"pl-40 pr-20\">\n      <div class=\"hero bg-base-200\">\n        <div class=\"hero-content flex-col lg:flex-row-reverse\">\n          <img src=\"https://scontent-mrs2-2.xx.fbcdn.net/v/t1.6435-9/105050030_3203138083079928_6432069507360259389_n.jpg?_nc_cat=102&ccb=1-7&_nc_sid=174925&_nc_ohc=3cWrBVccW3IAX_-QSws&_nc_ht=scontent-mrs2-2.xx&oh=00_AT_WI8pQGQ1vWd7jIBfA80wEWYH1YBpEthaXUB-ALSpeXQ&oe=62F16AC1\" class=\"max-w-sm rounded-lg shadow-2xl\" />\n          <div>\n            <h1 class=\"text-5xl font-bold\">Я - Маркетолог.</h1>\n            <p class=\"py-6 text-lg pr-10\">Уже много лет я веду этот блог. Его цели, темы и стиль повествования менялись бесчисленное количество раз, пока я не осознал, что просто хочу писать. Ради самого себя и для тех, кому это действительно интересно.</p>\n            <span className=\"font-bold\">Теги блога</span>\n            <TagsIndex />\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"lg:flex flex-row\">\n        <div className=\"basis-6/12\">\n          <PopularPost />\n        </div>\n        <div className=\"basis-4/12\">\n           <AllPosts />\n        </div>\n        <div className=\"basis-3/12\">\n           <SmallPost/>\n        </div>\n    </div>\n    </div>\n    </Layout>\n  )\n}\n\n\nexport default IndexPage\n","import * as React from \"react\"\nimport { StaticQuery } from \"gatsby\"\nimport { Link, graphql } from \"gatsby\"\nimport {GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport Img from \"gatsby-image\" \n\nconst PopularPost = () => (\n\n    <StaticQuery \n    query = {graphql`\n    query {\n        allWpPost (filter: {categories: {nodes: {elemMatch: {slug: {in: [\"life\", \"works\"]}}}}}, limit: 5){\n            nodes {\n              date(formatString: \"LL\", locale: \"ru\")\n              id\n              excerpt\n              content\n              slug\n              title\n              author {\n                node {\n                  name\n                  description\n                }\n              }\n              categories {\n                nodes {\n                  name\n                  slug\n                  id\n                  icat {\n                    caticon {\n                      localFile {\n                        childImageSharp {\n                          fluid {\n                            base64\n                            aspectRatio\n                            src\n                            srcSet\n                            sizes\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              featuredImage {\n                node {\n                  localFile {\n                    childImageSharp {\n                      gatsbyImageData( formats: WEBP, placeholder: BLURRED)\n                    }\n                  }\n                }\n              }\n            }\n          }\n    }\n    `}\n    render = {data => (\n      \n        <>\n        {data.allWpPost.nodes.map((post, node, nodes) => {\n       \n          const {slug, id, title, categories, featuredImage, content, date, excerpt } = post\n          let img = getImage(featuredImage.node.localFile.childImageSharp.gatsbyImageData)\n          const categ = categories.nodes\n          const aut = categ[0].icat.caticon.localFile.childImageSharp.fluid\n          var x = content\n          const time = 1500      \n    \n          return (\n            <div key={id} class=\"flex justify-center\">\n              \n              <div class=\"block text-left mb-5 mt-10 pr-10\">\n             <Link kay={categ[0].id} to={`/${categ[0].slug}`}>\n                <div class=\"flex\">\n                <Img \n                   fluid={aut} \n                   alt=\"A corgi smiling happily\"\n                   className=\"h-10 w-10 object-cover rounded-full mr-3\"\n                   />\n                    <div>\n                    <h6 className=\"font-bold text-indigo-700 hover:text-pink-700\">{categ[0].name}</h6>\n                    <small className=\"text-sm\">{date} - {Math.round(x.length/time)} минут</small>\n                    </div>\n                </div>\n                </Link>\n                <Link kay={id} to={`/${categ[0].slug}/${slug}`} >\n                <div class=\"pt-4 mb-5\">\n                  <h2 className=\"text-xl2 font-bold mb-2\">{title}</h2>\n                  <p class=\"text-sm mb-2\"\n                  dangerouslySetInnerHTML={{ __html: excerpt }}\n                  >\n                  \n                  </p>\n                  <GatsbyImage class=\"rounded-lg\" image={img} alt={title} />\n                </div>\n                <button class=\"text-blue-600\">Читать статью →</button>\n\n                </Link>\n                \n              </div>\n             \n            </div>\n          )\n          \n\n        })}  \n\n        </>\n    )}\n    />\n\n\n)\n    \n\n\n\nexport default PopularPost\n\n\n\n\n\n","import * as React from \"react\"\nimport { StaticQuery } from \"gatsby\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\" \n\nconst SmallPost = () => (\n\n    <StaticQuery \n    query = {graphql`\n     query {\n      allWpPost(\n        filter: {categories: {nodes: {elemMatch: {slug: {eq: \"tools\"}}}}}\n        limit: 5\n      ) {\n        nodes {\n          date(formatString: \"LL\", locale: \"ru\")\n          id\n          excerpt\n          content\n          slug\n          title\n          author {\n            node {\n              name\n              description\n            }\n          }\n          categories {\n            nodes {\n              name\n              slug\n              icat {\n                caticon {\n                  localFile {\n                    childImageSharp {\n                      fluid {\n                        base64\n                        aspectRatio\n                        src\n                        srcSet\n                        sizes\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      \n     }\n    `}\n    render = {data => (\n        <>\n          {data.allWpPost.nodes.map((post, node, nodes) => {\n          const {slug, id, title, categories, content,  date,  } = post \n          const categ = categories.nodes\n          const aut = categ[0].icat.caticon.localFile.childImageSharp.fluid\n          var x = content\n          const time = 1500\n          return (\n            <div key={id} className=\"flex justify-center\">\n              \n              <div className=\"block text-left mb-5 mt-10\">\n              <Link key={categ[0].id} to={`/${categ[0].slug}`}>\n                    <div className=\"flex\">\n                        <Img \n                        fluid={aut} \n                        alt=\"A corgi smiling happily\"\n                        className=\"h-10 w-10 object-cover rounded-full mr-3\"\n                        />\n                        <div>\n                        <h6 className=\"font-bold text-indigo-700 hover:text-pink-700\">{categ[0].name}</h6>\n                        <small className=\"text-sm\">{date} - {Math.round(x.length/time)} минут</small>\n                        </div>\n                    </div>\n                </Link>\n                <Link to={`/${categ[0].slug}/${slug}`} >\n                <div className=\"pt-4 mb-5\">\n                  <h2 className=\"text-xl font-bold mb-2\">{title}</h2>                  \n                </div>\n   \n                <button className=\"text-blue-600\">Читать статью →</button>\n                </Link>\n              </div>\n              \n            </div>\n          )\n        })}  \n\n        </>\n    )}\n    />\n\n\n)\n    \n\n\n\nexport default SmallPost\n\n\n\n\n\n","import { Link, graphql , StaticQuery} from \"gatsby\"\nimport * as React from \"react\"\n\nconst TagsIndex = () => (\n<StaticQuery\n query = {graphql`\n query {\n    allWpTag {\n      nodes {\n        name\n        slug\n        id\n      }\n    }\n  }\n \n\n \n `}\n render = {data => (\n     \n    <div className=\"tagsindex mt-4\">\n     {data.allWpTag.nodes.map((tag) => {\n         const { name, id } = tag\n          return (\n            <Link key={id} to={`/tag/${tag.slug}`} className=\"btn btn-outline btn-sm mr-2 mb-2\">\n            {name}\n        </Link>\n         )\n     })}\n  \n\n     \n     </div>\n )}\n/>\n    \n)\n\nexport default TagsIndex\n"],"names":["StaticQuery","query","render","data","allWpPost","nodes","map","post","node","slug","id","title","categories","featuredImage","date","content","img","getImage","localFile","childImageSharp","gatsbyImageData","categ","aut","icat","caticon","fluid","x","key","className","Link","to","alt","name","Math","round","length","G","image","class","src","excerpt","kay","dangerouslySetInnerHTML","__html","allWpTag","tag"],"sourceRoot":""}